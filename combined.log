{"level":"error","message":"Error creating cohort: Participant is not defined","stack":"ReferenceError: Participant is not defined\n    at createCohort (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controller\\cohortController.js:13:27)\n    at Layer.handle [as handle_request] (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\express\\lib\\router\\index.js:47:12)","timestamp":"2024-05-07T13:06:40.940Z"}
{"kind":"ObjectId","level":"error","message":"Error creating cohort: Cast to ObjectId failed for value \"6639bf6ad5a44c15b08d5cf\" (type string) at path \"_id\" for model \"Participant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"6639bf6ad5a44c15b08d5cf\" (type string) at path \"_id\" for model \"Participant\"\n    at SchemaObjectId.cast (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schema\\objectId.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1236:12)\n    at SchemaType.castForQuery (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1653:17)\n    at cast (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\cast.js:375:32)\n    at Query.cast (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\query.js:4786:12)\n    at Query._castConditions (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\query.js:2199:10)\n    at model.Query._findOne (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\query.js:2513:8)\n    at model.Query.exec (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\query.js:4330:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async createCohort (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controller\\cohortController.js:14:27)","stringValue":"\"6639bf6ad5a44c15b08d5cf\"","timestamp":"2024-05-07T13:38:58.240Z","value":"6639bf6ad5a44c15b08d5cf","valueType":"string"}
{"level":"info","message":"Cohorts retrieved successfully","timestamp":"2024-05-07T20:33:22.614Z"}
{"_message":"Participant validation failed","errors":{"address.address_Line":{"kind":"required","message":"Path `address.address_Line` is required.","name":"ValidatorError","path":"address.address_Line","properties":{"message":"Path `address.address_Line` is required.","path":"address.address_Line","type":"required"}},"address.city":{"kind":"required","message":"Path `address.city` is required.","name":"ValidatorError","path":"address.city","properties":{"message":"Path `address.city` is required.","path":"address.city","type":"required"}},"address.pincode":{"kind":"required","message":"Path `address.pincode` is required.","name":"ValidatorError","path":"address.pincode","properties":{"message":"Path `address.pincode` is required.","path":"address.pincode","type":"required"}},"address.state":{"kind":"required","message":"Path `address.state` is required.","name":"ValidatorError","path":"address.state","properties":{"message":"Path `address.state` is required.","path":"address.state","type":"required"}},"dateOfBirth":{"kind":"required","message":"Path `dateOfBirth` is required.","name":"ValidatorError","path":"dateOfBirth","properties":{"message":"Path `dateOfBirth` is required.","path":"dateOfBirth","type":"required"}},"email":{"kind":"required","message":"Path `email` is required.","name":"ValidatorError","path":"email","properties":{"message":"Path `email` is required.","path":"email","type":"required"}},"emergency_Contact.Name":{"kind":"required","message":"Path `emergency_Contact.Name` is required.","name":"ValidatorError","path":"emergency_Contact.Name","properties":{"message":"Path `emergency_Contact.Name` is required.","path":"emergency_Contact.Name","type":"required"}},"emergency_Contact.relationship":{"kind":"required","message":"Path `emergency_Contact.relationship` is required.","name":"ValidatorError","path":"emergency_Contact.relationship","properties":{"message":"Path `emergency_Contact.relationship` is required.","path":"emergency_Contact.relationship","type":"required"}},"gender":{"kind":"required","message":"Path `gender` is required.","name":"ValidatorError","path":"gender","properties":{"message":"Path `gender` is required.","path":"gender","type":"required"}},"name":{"kind":"required","message":"Path `name` is required.","name":"ValidatorError","path":"name","properties":{"message":"Path `name` is required.","path":"name","type":"required"}},"participant_Type":{"kind":"required","message":"Path `participant_Type` is required.","name":"ValidatorError","path":"participant_Type","properties":{"message":"Path `participant_Type` is required.","path":"participant_Type","type":"required"}}},"level":"error","message":"Error creating participant: Participant validation failed: emergency_Contact.relationship: Path `emergency_Contact.relationship` is required., emergency_Contact.Name: Path `emergency_Contact.Name` is required., address.pincode: Path `address.pincode` is required., address.state: Path `address.state` is required., address.city: Path `address.city` is required., address.address_Line: Path `address.address_Line` is required., participant_Type: Path `participant_Type` is required., gender: Path `gender` is required., dateOfBirth: Path `dateOfBirth` is required., email: Path `email` is required., name: Path `name` is required.","stack":"ValidationError: Participant validation failed: emergency_Contact.relationship: Path `emergency_Contact.relationship` is required., emergency_Contact.Name: Path `emergency_Contact.Name` is required., address.pincode: Path `address.pincode` is required., address.state: Path `address.state` is required., address.city: Path `address.city` is required., address.address_Line: Path `address.address_Line` is required., participant_Type: Path `participant_Type` is required., gender: Path `gender` is required., dateOfBirth: Path `dateOfBirth` is required., email: Path `email` is required., name: Path `name` is required.\n    at Document.invalidate (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3289:32)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3050:17\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2024-05-08T09:01:32.246Z"}
{"_message":"Participant validation failed","errors":{"emergencyContact.Name":{"kind":"required","message":"Path `emergencyContact.Name` is required.","name":"ValidatorError","path":"emergencyContact.Name","properties":{"message":"Path `emergencyContact.Name` is required.","path":"emergencyContact.Name","type":"required"}}},"level":"error","message":"Error creating participant: Participant validation failed: emergencyContact.Name: Path `emergencyContact.Name` is required.","stack":"ValidationError: Participant validation failed: emergencyContact.Name: Path `emergencyContact.Name` is required.\n    at Document.invalidate (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3289:32)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3050:17\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2024-05-08T09:04:06.070Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:06:04.978Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:07:07.367Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:08:30.435Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:09:15.389Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:09:43.652Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":"john@example.com"}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":"john@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:12:25.235Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","index":0,"keyPattern":{"email":1},"keyValue":{"email":null}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:13:00.866Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:18:05.403Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T09:18:30.790Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }","index":0,"keyPattern":{"Email":1},"keyValue":{"Email":"john@example.com"}},"index":0,"keyPattern":{"Email":1},"keyValue":{"Email":"john@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: Email_1 dup key: { Email: \"john@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T10:06:24.654Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","index":0,"keyPattern":{"email":1},"keyValue":{"email":null}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T10:06:29.155Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","index":0,"keyPattern":{"email":1},"keyValue":{"email":null}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":null},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: null }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T10:10:46.272Z"}
{"_message":"Participant validation failed","errors":{"Address.Pincode":{"kind":"regexp","message":"Please fill a valid 6-digit PIN code","name":"ValidatorError","path":"Address.Pincode","properties":{"message":"Please fill a valid 6-digit PIN code","path":"Address.Pincode","regexp":{},"type":"regexp","value":"60611"},"value":"60611"}},"level":"error","message":"Error creating participant: Participant validation failed: Address.Pincode: Please fill a valid 6-digit PIN code","stack":"ValidationError: Participant validation failed: Address.Pincode: Please fill a valid 6-digit PIN code\n    at Document.invalidate (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3289:32)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3050:17\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2024-05-08T10:44:08.645Z"}
{"_message":"Participant validation failed","errors":{"Address.Pincode":{"kind":"regexp","message":"Please fill a valid 6-digit PIN code","name":"ValidatorError","path":"Address.Pincode","properties":{"message":"Please fill a valid 6-digit PIN code","path":"Address.Pincode","regexp":{},"type":"regexp","value":"98101"},"value":"98101"}},"level":"error","message":"Error creating participant: Participant validation failed: Address.Pincode: Please fill a valid 6-digit PIN code","stack":"ValidationError: Participant validation failed: Address.Pincode: Please fill a valid 6-digit PIN code\n    at Document.invalidate (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3289:32)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3050:17\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2024-05-08T10:46:27.019Z"}
{"level":"info","message":"Cohorts retrieved successfully","timestamp":"2024-05-08T10:50:00.001Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-08T18:02:58.463Z"}
{"level":"error","message":"Error creating admin Cannot read properties of null (reading 'length')","stack":"TypeError: Cannot read properties of null (reading 'length')\n    at register (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:18:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-14T06:33:41.859Z"}
{"level":"error","message":"Error creating admin Cannot read properties of null (reading 'length')","stack":"TypeError: Cannot read properties of null (reading 'length')\n    at register (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:18:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-14T06:34:09.556Z"}
{"level":"error","message":"Error creating admin Cannot read properties of null (reading 'length')","stack":"TypeError: Cannot read properties of null (reading 'length')\n    at register (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:18:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-14T06:36:44.649Z"}
{"level":"error","message":"Error logging in admin user is not defined","stack":"ReferenceError: user is not defined\n    at login (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:61:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-14T06:41:58.856Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/node_modules/jsonwebtoken/sign.js:111:20)\n    at login (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:67:23)","timestamp":"2024-05-14T06:42:40.282Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/node_modules/jsonwebtoken/sign.js:111:20)\n    at login (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:67:23)","timestamp":"2024-05-14T06:43:07.803Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/node_modules/jsonwebtoken/sign.js:111:20)\n    at login (/Users/bivekrai/Desktop/Rajiv/Happy2Age_Backend/Happy2Age_Backend/controllers/authController.js:67:23)","timestamp":"2024-05-14T06:43:44.614Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:09:06.042Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:32:37.640Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"alice.smith@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"alice.smith@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:32:43.221Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:33:04.649Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:35:29.461Z"}
{"code":11000,"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"john.doe@example.com"},"level":"error","message":"Error creating participant: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: happy2age.participants index: email_1 dup key: { email: \"john.doe@example.com\" }\n    at InsertOneOperation.execute (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async executeOperation (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:126:16)","timestamp":"2024-05-16T17:36:55.675Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at login (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controllers\\authController.js:67:23)","timestamp":"2024-05-17T05:53:19.936Z"}
{"_message":"Participant validation failed","errors":{"address.pincode":{"kind":"regexp","message":"Please fill a valid 6-digit PIN code","name":"ValidatorError","path":"address.pincode","properties":{"message":"Please fill a valid 6-digit PIN code","path":"address.pincode","regexp":{},"type":"regexp","value":"62701"},"value":"62701"}},"level":"error","message":"Error creating participant: Participant validation failed: address.pincode: Please fill a valid 6-digit PIN code","stack":"ValidationError: Participant validation failed: address.pincode: Please fill a valid 6-digit PIN code\n    at Document.invalidate (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3289:32)\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\document.js:3050:17\n    at C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\mongoose\\lib\\schemaType.js:1388:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2024-05-17T08:11:48.646Z"}
{"level":"error","message":"Error logging in admin Cannot read properties of null (reading 'salt')","stack":"TypeError: Cannot read properties of null (reading 'salt')\n    at login (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controllers\\authController.js:61:48)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-19T09:47:18.605Z"}
{"level":"error","message":"Error logging in admin Cannot read properties of null (reading 'salt')","stack":"TypeError: Cannot read properties of null (reading 'salt')\n    at login (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controllers\\authController.js:61:48)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-05-19T09:47:57.231Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at login (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controllers\\authController.js:67:23)","timestamp":"2024-05-19T09:55:32.557Z"}
{"level":"error","message":"Error logging in admin secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at login (C:\\Users\\HP\\Desktop\\Happy2Age\\Happy2Age_Backend\\controllers\\authController.js:67:23)","timestamp":"2024-05-19T09:57:06.456Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T09:58:21.589Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T09:58:22.019Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T09:58:55.702Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T09:58:56.099Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:01:38.150Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:01:38.616Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:04:15.568Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:04:15.819Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:05:31.422Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:05:31.638Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:07:44.476Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:07:44.727Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:00.287Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:00.565Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:12.609Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:12.817Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:26.601Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:08:27.613Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:25:12.774Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:25:12.974Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:27:23.146Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:27:23.373Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:35:03.921Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:35:04.288Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:35:08.894Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:35:09.308Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:37:43.002Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:37:43.193Z"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Error fetching participants: read ECONNRESET","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:217:20)","syscall":"read","timestamp":"2024-05-19T10:45:24.925Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:45:25.696Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:45:25.930Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:47:06.086Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T10:47:06.458Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T11:33:23.085Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T11:33:23.369Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T11:33:55.363Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T11:33:55.622Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T12:27:57.925Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T12:27:58.196Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T14:24:40.226Z"}
{"level":"info","message":"Retrieved 3 cohorts successfully","timestamp":"2024-05-19T14:24:40.395Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:25:40.608Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:25:40.749Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:25:51.726Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:25:51.900Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:09.574Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:09.756Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:42.654Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:42.842Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:51.481Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:26:51.656Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:27:35.407Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:27:35.587Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:31:19.052Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:31:19.268Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:31:54.204Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:31:54.403Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:32:34.487Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:32:40.513Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:32:47.870Z"}
{"level":"info","message":"Retrieved 1 cohorts successfully","timestamp":"2024-05-19T14:33:03.303Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:15.033Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:15.201Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:30.614Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:45.981Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:46.151Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:35:52.507Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:36:37.576Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:36:51.865Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:36:52.046Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:36:59.494Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:37:19.479Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:37:22.469Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:38:13.504Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:38:16.481Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:38:42.497Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:40:09.865Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:40:10.045Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:40:24.504Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:42:55.012Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:42:55.182Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:43:03.528Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:43:03.694Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:43:09.227Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:43:09.391Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:47:27.006Z"}
{"level":"info","message":"Retrieved 2 cohorts successfully","timestamp":"2024-05-19T14:47:27.169Z"}
